<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="bunifuImageButton7.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAEAAAABACAYAAACqaXHeAAAABGdBTUEAALGPC/xhBQAAAyZJREFUeF7t
        28vrDWEcx/GTSyKXCIVcyoKdXCKFUsSKItlY2CkpsiFRSlnau5T8BzZy2digbCTKTkTu92vuvD+n3+j8
        vn3H78x45swzc+ZTr81zZn7PM9/fucw8M08rZybhAK7gMX7gd499wyNcxh6MRk+yAW/gDapM97AMhWYz
        yvhvd+sLVqKQzMRHeB3H5AnGI3iOw+vwK+7jbo89wHd4YzqIoBmOl7AdncY4lJXJOAs7rtsImtmwnTzE
        CJSdCbAfzZ8YiWBZhM4O5CJiyS3Y8U1DsCyB7eA8YslN2PHNQLA0BYDtoCkAYklTANjxNQVAsDQFgO2g
        KQBiSVMA2PE1BUDuTMRyaPZnC/bDdqAZmGOReA47vh3Q2HUMOhYd05BZiEuIedYnL80dXMACuNmNtAmG
        OtFk6i4MynZ4G9fZNrQzC5/hbVRnHzAdraMDDXWgf6TmCnW/4P1A278cgfsTUkUnMAZJpkI/1d62iRto
        vetoqKqrGAYbTY/rHeHtI7rB475QNVuRlsPw9km4jVWzGmnZCW+fhNtYNXuRlpPw9km4jVWjmzbeuf9S
        6MTH2yfhNlaRbtPru2AsdMdIZ3vd/BS6jf3EbewnbmM/cRv7idto6RkA2/YL+oaNgcZix9ftpb3baN1x
        2mKfEtOTIrbN4zZaTQGctqYAiCXRFEBnYfMKpj5s/qsAr02Dp9sCbITdLjT1YZO3ALqGaF3vaEhT1wJc
        Q/uZX+/FTnUtwD6075gM9TGoYwFeQI/YtbMO/zpz6rYAK6D5uSKpD5usBdCxrsWg6D5a2v2BbgtQVrIU
        4BM2wc0cnMJbdO5UhwJoBlhT53rqdciMwnwsHqB3R+cfk6I+AueQNV4B1iAZv45Fx5Q73T4fEOJLsP3b
        nDFeAUp5QKIpAOx2WTUFQNZEU4AQF0NzkTXRFKCsFF6Avl8wkbZkJuiylJzpyZKZtEVTZ1Dmoqkp0ImT
        HVfwRVOKTiNtR6JpaV1NliHtAu4Qgkcfgyo8TPUMfy9zQ0fXBLEvnV2FQrMeT+ENoEw9WTydRG8xTaVp
        Ts1eOvfSK2j5vJ5yzbF8vtX6A09yqLxQAoWEAAAAAElFTkSuQmCC
</value>
  </data>
</root>